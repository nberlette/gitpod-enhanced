import{_ as e,c as s,o as a,d as n}from"./app.91265b5e.js";const y=JSON.parse('{"title":"gitpod-enhanced","description":"","frontmatter":{"title":"gitpod-enhanced","home":true,"heroText":"gitpod-enhanced","tagline":null,"actionText":"Get Started","actionLink":"/#install","features":[{"title":"Starship.rs","details":"Have a beautifully consistent shell prompt on any platform."},{"title":"GPG-integrated","details":"Configured for GPG-signed commits right out of the box."},{"title":"Gitpod Ready","details":"Ready to use in Gitpod Workspaces, with zero configuration."}],"footer":"MIT \xA9 Nicholas Berlette"},"headers":[{"level":2,"title":"Getting Started","slug":"getting-started"},{"level":2,"title":"Features","slug":"features"},{"level":3,"title":"Git Enhancements","slug":"git-enhancements"},{"level":3,"title":"Package Management","slug":"package-management"},{"level":3,"title":"Other terminal addons","slug":"other-terminal-addons"},{"level":2,"title":"Configuration","slug":"configuration"},{"level":3,"title":"GitHub CLI: Authentication","slug":"github-cli-authentication"},{"level":3,"title":"GPG Support","slug":"gpg-support"},{"level":3,"title":"Formatting PS1 and GIT_PS1","slug":"formatting-ps1-and-git-ps1"},{"level":3,"title":"Override via .vscode/settings.json","slug":"override-via-vscode-settings-json"},{"level":3,"title":"Override via .gitpod.yml","slug":"override-via-gitpod-yml"},{"level":2,"title":"Contributing","slug":"contributing"},{"level":2,"title":"Code of Conduct","slug":"code-of-conduct"},{"level":3,"title":"License","slug":"license"}],"relativePath":"index.md"}'),o={name:"index.md"},t=n(`<div align="center" class="badges"><a href="https://gitpod.io/#https://github.com/nberlette/gitpod-enhanced" target="_blank" title="Open in Gitpod: Ready to Code"><img src="https://img.shields.io/badge/Prebuild-READY%20%E2%86%97-8add44.svg?logo=gitpod&amp;style=for-the-badge" alt="Open in Gitpod: Ready to Code"></a><a href="https://github.com/nberlette/gitpod-enhanced/actions/workflows/docker-release.yml" title="CI Build Status: Docker Image"><img alt="GitHub Workflow Status" src="https://img.shields.io/github/workflow/status/nberlette/gitpod-enhanced/Release%20Docker%20Image?label=Build&amp;logo=docker&amp;style=for-the-badge&amp;color=8add44"></a><img src="https://img.shields.io/badge/Bash-v5-333.svg?logo=gnubash&amp;logoColor=8add44&amp;style=for-the-badge" alt="GNU Bash: Bourne Again Shell"><img src="https://img.shields.io/badge/PNPM-v7-333.svg?logo=pnpm&amp;style=for-the-badge" alt="PNPM: Performant Node Package Management"></div><br><div align="center"><p>Turbocharged <a href="https://hub.docker.com/r/nberlette/gitpod-enhanced" target="_blank" rel="noopener noreferrer">Gitpod Workspace Image</a> built on top of the official <a href="https://hub.docker.com/r/gitpod/workspace-full" target="_blank" rel="noopener noreferrer"><strong><code>gitpod/workspace-full</code></strong></a> image \u2014 with some tasteful, opinionated enhancements focused solely on improving developer experience. Most of the configurations are directly ported over from <a href="https://github.com/nberlette/dotfiles" target="_blank" rel="noopener noreferrer">my dotfiles repository</a>.</p></div><h2 id="getting-started" tabindex="-1">Getting Started <a class="header-anchor" href="#getting-started" aria-hidden="true">#</a></h2><p>Add this line to your <code>.gitpod.yml</code> file to start using <code>gitpod-enhanced</code>:</p><div class="language-yaml"><span class="copy"></span><pre><code><span class="line"><span style="color:#F07178;">image</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">nberlette/gitpod-enhanced:latest</span></span>
<span class="line"></span></code></pre></div><blockquote><p><strong>Note</strong>: if you have <code>dotfiles</code> configured in your <a href="https://gitpod.io/preferences" target="_blank" rel="noopener noreferrer">Gitpod Preferences</a>, this project may cause some file conflicts with it.</p></blockquote><p><a href="https://gitpod.io/#https://github.com/nberlette/gitpod-enhanced" target="_blank" rel="noopener noreferrer"><img src="https://gitpod.io/button/open-in-gitpod.svg" alt="Open in Gitpod"></a></p><h2 id="features" tabindex="-1">Features <a class="header-anchor" href="#features" aria-hidden="true">#</a></h2><h3 id="git-enhancements" tabindex="-1">Git Enhancements <a class="header-anchor" href="#git-enhancements" aria-hidden="true">#</a></h3><ul><li>Displays git info with (<a href="https://git.io/git-ps1" target="_blank" rel="noopener noreferrer"><code>git-prompt.sh</code> from official git repo</a>)</li><li><a href="https://cli.github.com" target="_blank" rel="noopener noreferrer">GitHub CLI</a>, <a href="https://github.com/tj/git-extras" target="_blank" rel="noopener noreferrer"><code>git-extras</code></a>, <code>fzf</code>, and <code>neovim</code></li><li><a href="#gpg-support">GPG support</a> for PGP-signing commits (with VSCode integration)</li></ul><h3 id="package-management" tabindex="-1">Package Management <a class="header-anchor" href="#package-management" aria-hidden="true">#</a></h3><ul><li><a href="https://npm.im/pnpm" target="_blank" rel="noopener noreferrer"><code>pnpm</code></a>, <a href="https://npm.im/degit" target="_blank" rel="noopener noreferrer"><code>degit</code></a>, <a href="https://npm.im/@antfu/ni" target="_blank" rel="noopener noreferrer"><code>@antfu/ni</code></a> for simple package management</li><li><a href="https://typescriptlang.org" target="_blank" rel="noopener noreferrer"><code>typescript</code></a>, <a href="https://npm.im/ts-node" target="_blank" rel="noopener noreferrer"><code>ts-node</code></a>, <a href="https://npm.im/ts-standard" target="_blank" rel="noopener noreferrer"><code>ts-standard</code></a></li><li><code>yarn global bin</code> prepended to the <code>$PATH</code> (e.g. allows command <code>next</code> instead of <code>npx next</code>!)</li></ul><h3 id="other-terminal-addons" tabindex="-1">Other terminal addons <a class="header-anchor" href="#other-terminal-addons" aria-hidden="true">#</a></h3><ul><li>Installs sensible defaults for <code>ls</code>, <code>diff</code>, <code>grep</code> - all with <code>color</code>!</li><li>Bundled with many useful aliases, tools, and various other functional upgrades</li><li>Removes duplicate entries from <code>$PATH</code> variable</li></ul><h2 id="configuration" tabindex="-1">Configuration <a class="header-anchor" href="#configuration" aria-hidden="true">#</a></h2><p>This is a cursory overview of some of the configuration options. For more detailed explanation of builtin workspace features, see the <a href="https://gitpod.io/docs/configuration.html" target="_blank" rel="noopener noreferrer">Gitpod documentation</a>.</p><h3 id="github-cli-authentication" tabindex="-1">GitHub CLI: Authentication <a class="header-anchor" href="#github-cli-authentication" aria-hidden="true">#</a></h3><p>I&#39;m currently working (on minimal bandwidth) to integrate the newly-released <code>dotfiles</code> support with gitpod-enhanced, which will allow for a lot more streamlined configuration for settings such as this.</p><p>Until then, however, we have only the finest of janky solutions!</p><div class="language-bash"><span class="copy"></span><pre><code><span class="line"><span style="color:#A6ACCD;">GITHUB_TOKEN=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">ghp_2ed23idj023ijmdjqkfewjdsnfe</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># set with gitpod&#39;s CLI:</span></span>
<span class="line"><span style="color:#82AAFF;">eval</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">$(</span><span style="color:#C3E88D;">gp env -e GITHUB_TOKEN=</span><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;">GITHUB_TOKEN</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span></code></pre></div><p>Setting the $GITHUB_TOKEN variable with a properly-scoped PAT (personal access token), will direct <code>gitpod-enhanced</code> to automatically authenticate your account with the GitHub CLI.</p><p>This means you&#39;ll be able to use the full list of features as soon as you fire up your workspace!</p><h3 id="gpg-support" tabindex="-1">GPG Support <a class="header-anchor" href="#gpg-support" aria-hidden="true">#</a></h3><p>I&#39;ve recently included (experimental) support for GPG commit signatures, via the command line or Visual Studio Code UI.</p><p>If you create a new PGP key within a Gitpod workspace using the GitHub CLI (<code>gh</code>), it&#39;s pretty straightforward:</p><div class="language-bash"><span class="copy"></span><pre><code><span class="line"><span style="color:#676E95;font-style:italic;"># find &lt;key-id&gt; using gpg (or in output of \`gh keys\`)</span></span>
<span class="line"><span style="color:#A6ACCD;">gpg --list-secret-keys --keyid-format LONG</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># save the key-id from above as $GPG_KEY_ID</span></span>
<span class="line"><span style="color:#A6ACCD;">GPG_KEY_ID=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">&lt;key-id&gt;</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># persist key-id to gitpod env storage. exports all vars to current workspace</span></span>
<span class="line"><span style="color:#82AAFF;">eval</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;$(</span><span style="color:#C3E88D;">gp env -e GPG_KEY_ID=</span><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;">GPG_KEY_ID</span><span style="color:#89DDFF;">)&quot;</span></span>
<span class="line"></span></code></pre></div><div class="language-bash"><span class="copy"></span><pre><code><span class="line"><span style="color:#676E95;font-style:italic;"># export to gitpod</span></span>
<span class="line"><span style="color:#82AAFF;">eval</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;$(</span><span style="color:#C3E88D;">gp env -e GPG_KEY=</span><span style="color:#89DDFF;">$(</span><span style="color:#C3E88D;">gpg --export-secret-keys --armor </span><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;">GPG_KEY_ID</span><span style="color:#C3E88D;"> </span><span style="color:#89DDFF;">|</span><span style="color:#C3E88D;"> base64 -w 0</span><span style="color:#89DDFF;">))&quot;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># you can also use GPG_PRIVATE_KEY</span></span>
<span class="line"><span style="color:#82AAFF;">eval</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;$(</span><span style="color:#C3E88D;">gp env -e GPG_PRIVATE_KEY=</span><span style="color:#89DDFF;">$(</span><span style="color:#C3E88D;">gpg --export-secret-keys --armor </span><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;">GPG_KEY_ID</span><span style="color:#C3E88D;"> </span><span style="color:#89DDFF;">|</span><span style="color:#C3E88D;"> base64 -w 0</span><span style="color:#89DDFF;">))&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># source our .bashrc file for changes to take effect</span></span>
<span class="line"><span style="color:#82AAFF;">source</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">~</span><span style="color:#A6ACCD;">/.bashrc</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># all done!</span></span>
<span class="line"></span></code></pre></div><h4 id="troubleshooting" tabindex="-1">Troubleshooting <a class="header-anchor" href="#troubleshooting" aria-hidden="true">#</a></h4><p>If you run into issues with signing commits, specifically <code>Failed to sign commit object</code> errors / GPG failures, just run the following command to unlock your private key. You will be prompted for your secret key passphrase, after which you should see a success message stating your key is unlocked and ready for action!</p><div class="language-diff"><span class="copy"></span><pre><code><span class="line"><span style="color:#A6ACCD;">gpg_init</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># Enter passphrase: [...]</span></span>
<span class="line"><span style="color:#89DDFF;">+</span><span style="color:#C3E88D;"> \u{1F7E2} \u{1F510} GPG unlocked and ready to sign!</span></span>
<span class="line"></span></code></pre></div><h3 id="formatting-ps1-and-git-ps1" tabindex="-1">Formatting <code>PS1</code> and <code>GIT_PS1</code> <a class="header-anchor" href="#formatting-ps1-and-git-ps1" aria-hidden="true">#</a></h3><p>The <code>GIT_PS1_</code> environment variables control the functions and display of the git-integrated shell prompt.</p><p>These are the currently available options and their default:</p><div class="language-bash"><span class="copy"></span><pre><code><span class="line"><span style="color:#A6ACCD;">GIT_PS1_SHOWCOLORHINTS=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">1</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">GIT_PS1_SHOWDIRTYSTATE=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">1</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">GIT_PS1_SHOWSTASHSTATE=</span><span style="color:#89DDFF;">&quot;&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">GIT_PS1_SHOWUNTRACKEDFILES=</span><span style="color:#89DDFF;">&quot;&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">GIT_PS1_SHOWUPSTREAM=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">auto</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">GIT_PS1_OMITSPARSESTATE=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">1</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">GIT_PS1_STATESEPARATOR=</span><span style="color:#89DDFF;">&quot;&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">GIT_PS1_DESCRIBE_STYLE=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">tag</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">GIT_PS1_HIDE_IF_PWD_IGNORED=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">1</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"></span></code></pre></div><p>The last three options are <code>GIT_PS1_PREFIX</code>, <code>GIT_PS1_SUFFIX</code>, <code>GIT_PS1_FORMAT</code>. These allow you to change the colors and format of the surrounding <code>PS1</code> prompt string.</p><div class="language-bash"><span class="copy"></span><pre><code><span class="line"><span style="color:#A6ACCD;">GIT_PS1_PREFIX=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">\\[\\e]0;\\u \\W\\e\\]\\[\\e[1;7;33m\\] \\u \\[\\e[0;7;36m\\] \\w \\[\\e[0;1m\\] git:(</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">GIT_PS1_SUFFIX=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">\\[\\e[1m\\])\\[\\e[0m\\]\\n\\[\\e[1;32;6m\\]</span><span style="color:#A6ACCD;">\\$</span><span style="color:#C3E88D;">\\[\\e[0m\\] </span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">GIT_PS1_FORMAT=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">%s</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"></span></code></pre></div><p>They have no <code>git config</code> equivalent, and must be set in <code>settings.json</code>, the Gitpod Dashboard, or through the command <code>gp env</code> in the terminal:</p><div class="language-bash"><span class="copy"></span><pre><code><span class="line"><span style="color:#82AAFF;">eval</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">$(</span><span style="color:#C3E88D;">gp env -e GIT_PS1_PREFIX=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">\\[\\e[1m\\] \\w \\[\\e[0m\\] ... </span><span style="color:#89DDFF;">&quot;)</span></span>
<span class="line"></span></code></pre></div><blockquote><p>You may change/remove any of these (with scope!) in <strong>Dashboard &gt; Settings &gt; Variables</strong>.</p></blockquote><h3 id="override-via-vscode-settings-json" tabindex="-1">Override via <code>.vscode/settings.json</code> <a class="header-anchor" href="#override-via-vscode-settings-json" aria-hidden="true">#</a></h3><div class="language-json [.vscode/settings.json]"><span class="copy"></span><pre><code><span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">terminal.integrated.env.linux</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">GIT_PS1_SHOWUPSTREAM</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">auto verbose name</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">GIT_PS1_SHOWUNTRACKEDFILES</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><h3 id="override-via-gitpod-yml" tabindex="-1">Override via <code>.gitpod.yml</code> <a class="header-anchor" href="#override-via-gitpod-yml" aria-hidden="true">#</a></h3><div class="language-yaml"><span class="copy"></span><pre><code><span class="line"><span style="color:#676E95;font-style:italic;"># .gitpod.yml</span></span>
<span class="line"><span style="color:#F07178;">gitConfig</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">bash.showUpstream</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">false</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">bash.hideIfPwdIgnored</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">false</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"></span></code></pre></div><blockquote><p>Note: only <strong><em>some</em></strong> of the variables have an equivalent <code>git config</code> value. This allows you to override on a per-repository or per-workspace basis, right from the <code>.gitpod.yml</code> file.</p></blockquote><h2 id="contributing" tabindex="-1">Contributing <a class="header-anchor" href="#contributing" aria-hidden="true">#</a></h2><p>Community contributions are paramount to the success of Open Source projects such as this, and maintainers like me rely on people like you to help keep the code alive. <strong>You are more than welcome</strong> to make any contributions, and I highly encourage you to make a pull request - regardless of whether you&#39;re adding, editing, or deleting code. It&#39;s all welcome here.</p><h2 id="code-of-conduct" tabindex="-1">Code of Conduct <a class="header-anchor" href="#code-of-conduct" aria-hidden="true">#</a></h2><p>Please <a href="./contribute.html">read the guidelines for contributing</a>, as well as our <a href="./conduct.html">community code of conduct</a> before you make any contributions. Once you feel familiar with them, if you have any questions just <a href="https://github.com/nberlette/gitpod-enhanced/issues" target="_blank" rel="noopener noreferrer">open an issue</a> or contact me directly!</p><p>Thanks!</p><h3 id="license" tabindex="-1">License <a class="header-anchor" href="#license" aria-hidden="true">#</a></h3><p><a href="https://mit-license.org" target="_blank" rel="noopener noreferrer">MIT</a> \xA9 2022 <a href="https://github.com/nberlette" target="_blank" rel="noopener noreferrer">Nicholas Berlette</a> \xB7 not affiliated with <a href="https://gitpod.io" target="_blank" rel="noopener noreferrer">gitpod.io</a> \xB7 <a href="./contribute.html">contribute</a> \xB7 <a href="./conduct.html">code of conduct</a></p>`,52),l=[t];function p(r,i,c,d,h,g){return a(),s("div",null,l)}var D=e(o,[["render",p]]);export{y as __pageData,D as default};
